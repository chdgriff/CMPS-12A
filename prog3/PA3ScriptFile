Script started on Sat 05 Nov 2016 09:13:25 PM PDT
[?1034hbash-4.2$ cat PlayCraps.java 
import java.util.*;

/*
 * Assignment #3.
 * This program allows user to play an interactive game of Craps.
 * 
 * Authors: Chris Griffis (chdgriff@ucsc.edu)
 */

public class PlayCraps {
	int seed;//seed 
	int chips;//variable for chips
	int bet;//variable for inputed bet
	int point;//Variable holding point value
	int dice1;//First dice throw
	int dice2;//Second dice throw
	int roll;//Sum of dice1 and dice2
	Random rand;//Random object used to roll dice
	boolean comeOut;//variable for first roll
	
	public static void main(String[] args) {
		PlayCraps play = new PlayCraps();
		
		play.craps();
	}
	
	//Craps game
	public void craps() {
		Scanner input = new Scanner(System.in);//User inputs
		Scanner keyboard = new Scanner(System.in);//Wait for enter press
		comeOut = true;
		
		System.out.print("Enter the seed: ");
		seed = input.nextInt();
		rand = new Random(seed);
		
		System.out.print("How many chips do you want? ");
		chips = input.nextInt();
		
		//Loop to run until chips run out.
		while (chips > 0) {
			if (comeOut) {
				//Loop to ask for valid bet
				do {
					System.out.print("\nEnter bet: ");
					bet = input.nextInt();
					
					if (bet <= chips) {
						break;
					}
					else {
						System.out.println("You don't have that many chips.");
					}
				} while (bet > chips);
			
				System.out.print("Press \"Enter\" to roll come out dice.");
				keyboard.nextLine();
				rollDice();
				
				if (roll == 7 || roll == 11) {
					win();
					
				}
				else if (roll == 2 || roll == 3 || roll == 12) {
					lose();
					
				}
				else {
					comeOut = false;
					point = roll;
					System.out.println("The point is: " + roll + "\n");
				}
			}
			else {
				System.out.print("Press \"Enter\" to roll for point " + point + ".");
				keyboard.nextLine();
				rollDice();
				
				if (roll == 7) {
					lose();
				}
				else if (roll == point) {
					win();
				}
			}
		}
		keyboard.close();
		input.close();
	}
	
	//Player wins and gets bet
	public void win() {
		chips += bet;
		comeOut = true;
		System.out.println("You won, you now have: " + chips);
	}
	
	//Player loses and loses bet amount
	public void lose() {
		chips -= bet;
		comeOut = true;
		System.out.println("You lost, you now have: " + chips);
	}
	
	//Method to roll dice and sum to variable roll
	public void rollDice() {
		dice1 = rand.nextInt(6) + 1;
		dice2 = rand.nextInt(6) + 1;
		printDice(dice1, dice2);
		roll = dice1 + dice2;
	}
	
	//method to print dice values based on inputs
	public void printDice(int val1, int val2) {		
		String line1, line2, line3, line4, line5;
		String line22, line23, line24;
		line1 = "╔═══════╗ ╔═══════╗";
		line5 = "╚═══════╝ ╚═══════╝";
		switch (val1) {
			case 1: line2 = "║       ║ ";
					line3 = "║   *   ║ ";
					line4 = "║       ║ ";
					break;
			case 2: line2 = "║*      ║ ";
					line3 = "║       ║ ";
					line4 = "║      *║ ";
					break;
			case 3: line2 = "║*      ║ ";
					line3 = "║   *   ║ ";
					line4 = "║      *║ ";
					break;
			case 4: line2 = "║*     *║ ";
					line3 = "║       ║ ";
					line4 = "║*     *║ ";
					break;
			case 5: line2 = "║*     *║ ";
					line3 = "║   *   ║ ";
					line4 = "║*     *║ ";
					break;
			case 6: line2 = "║*     *║ ";
					line3 = "║*     *║ ";
					line4 = "║*     *║ ";;
					break;
			default: line2 = "║       ║ ";
					 line3 = "║       ║ ";
					 line4 = "║       ║ ";
					 break;
		}
		
		switch (val2) {
			case 1: line22 = "║       ║ ";
					line23 = "║   *   ║ ";
					line24 = "║       ║ ";
					break;
			case 2: line22 = "║*      ║ ";
					line23 = "║       ║ ";
					line24 = "║      *║ ";
					break;
			case 3: line22 = "║*      ║ ";
					line23 = "║   *   ║ ";
					line24 = "║      *║ ";
					break;
			case 4: line22 = "║*     *║ ";
					line23 = "║       ║ ";
					line24 = "║*     *║ ";
					break;
			case 5: line22 = "║*     *║ ";
					line23 = "║   *   ║ ";
					line24 = "║*     *║ ";
					break;
			case 6: line22 = "║*     *║ ";
					line23 = "║*     *║ ";
					line24 = "║*     *║ ";;
					break;
			default: line22 = "║       ║ ";
					 line23 = "║       ║ ";
					 line24 = "║       ║ ";
					 break;
		}
		System.out.println("You rolled: " + line1);
		System.out.printf("            %10s%10s\n", line2, line22);
		System.out.printf("            %10s%10s\n", line3, line23);
		System.out.printf("            %10s%10s\n", line4, line24);
		System.out.println("            " + line5);
	}
}
bash-4.2$ cat SimCraps.java 
import java.util.Random;

/*
 * Assignment #3.
 * This program allows user to simulate games of Craps to find the
 * probability that a user would win.
 * 
 * Authors: Chris Griffis (chdgriff@ucsc.edu)
 */

public class SimCraps {
	int point;//Variable holding point value
	int dice1;//First dice throw
	int dice2;//Second dice throw
	int roll;//Sum of dice1 and dice2
	Random rand = new Random();//Random object used to roll dice
	boolean comeOut;//variable for first roll
	boolean cont;//If point is not rolled
	double gamesWon;//Games won
	
	public static void main(String[] args) {
		SimCraps run = new SimCraps();
		
		double totalGames = Double.parseDouble(args[0]);
		
		//For test use
		//double totalGames = 1000;
		
		for (int i = 0; i < totalGames; i++) {
			run.craps();
		}
		
		double probability = (run.gamesWon / totalGames);
		System.out.println("Probability of winning: " + probability);
	}
	
	//Runs one game of craps
	public void craps() {
		do {
			if (comeOut) {
				rollDice();
				
				if (roll == 7 || roll == 11) {
					win();
				}
				else if (roll == 2 || roll == 3 || roll == 12) {
					lose();	
				}
				else {
					comeOut = false;
					cont = true;
					point = roll;
				}
			}
			else {
				rollDice();
				
				if (roll == 7) {
					lose();
				}
				else if (roll == point) {
					win();
				}
			}
		} while (cont);
	}
	
	//Marks another win and prevents another game from running.
	public void win() {
		gamesWon++;
		comeOut = true;
		cont = false;
	}
	
	//Prevents another game from running.
	public void lose() {
		comeOut = true;
		cont = false;
	}
	
	//Method to roll dice and its sum to variable roll
	public void rollDice() {
		dice1 = rand.nextInt(6) + 1;
		dice2 = rand.nextInt(6) + 1;
		roll = dice1 + dice2;
	}
}


bash-4.2$ javac PlayCraps.java 
j bash-4.2$ javac Simc[KCrpa[K[Kaps
error: Class names, 'SimCraps', are only accepted if annotation processing is explicitly requested
1 error
bash-4.2$ javacSim[K[K[K si[K[KSimCraps.java 
bash-4.2$ java PlayCraps.[K
Enter the seed: 1234
How many chips do you want? 100

Enter bet: 50
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║*     *║ 
            ║   *   ║ ║*     *║ 
            ║      *║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
The point is: 9

Press "Enter" to roll for point 9.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║       ║ 
            ║*     *║ ║   *   ║ 
            ║*     *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
You lost, you now have: 50

Enter bet: 50
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║*     *║ 
            ║   *   ║ ║       ║ 
            ║      *║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
You won, you now have: 100

Enter bet: 75
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║*      ║ 
            ║       ║ ║       ║ 
            ║      *║ ║      *║ 
            ╚═══════╝ ╚═══════╝
The point is: 4

Press "Enter" to roll for point 4.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║*      ║ 
            ║       ║ ║       ║ 
            ║*     *║ ║      *║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 4.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║*      ║ 
            ║   *   ║ ║   *   ║ 
            ║*     *║ ║      *║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 4.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║*     *║ 
            ║*     *║ ║   *   ║ 
            ║*     *║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 4.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║       ║ 
            ║*     *║ ║   *   ║ 
            ║*     *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
You lost, you now have: 25

Enter bet: 25
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║       ║ 
            ║   *   ║ ║   *   ║ 
            ║*     *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
The point is: 6

Press "Enter" to roll for point 6.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║*     *║ 
            ║       ║ ║       ║ 
            ║      *║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
You won, you now have: 50

Enter bet: 50
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║*      ║ 
            ║   *   ║ ║       ║ 
            ║      *║ ║      *║ 
            ╚═══════╝ ╚═══════╝
The point is: 5

Press "Enter" to roll for point 5.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║       ║ 
            ║       ║ ║   *   ║ 
            ║      *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 5.
You rolled: ╔═══════╗ ╔═══════╗
            ║       ║ ║*     *║ 
            ║   *   ║ ║       ║ 
            ║       ║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
You won, you now have: 100

Enter bet: 100
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║       ║ 
            ║   *   ║ ║   *   ║ 
            ║*     *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
The point is: 6

Press "Enter" to roll for point 6.
You rolled: ╔═══════╗ ╔═══════╗
            ║*      ║ ║       ║ 
            ║       ║ ║   *   ║ 
            ║      *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 6.
You rolled: ╔═══════╗ ╔═══════╗
            ║       ║ ║*     *║ 
            ║   *   ║ ║   *   ║ 
            ║       ║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
You won, you now have: 200

Enter bet: 2000 
Press "Enter" to roll come out dice.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║       ║ 
            ║   *   ║ ║   *   ║ 
            ║*     *║ ║       ║ 
            ╚═══════╝ ╚═══════╝
The point is: 6

Press "Enter" to roll for point 6.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║*     *║ 
            ║   *   ║ ║   *   ║ 
            ║*     *║ ║*     *║ 
            ╚═══════╝ ╚═══════╝
Press "Enter" to roll for point 6.
You rolled: ╔═══════╗ ╔═══════╗
            ║*     *║ ║*      ║ 
            ║       ║ ║   *   ║ 
            ║*     *║ ║      *║ 
            ╚═══════╝ ╚═══════╝
You lost, you now have: 0
bash-4.2$ java SimCraps.[K 10
Probability of winning: 0.0
bash-4.2$ java SimCraps 100
Probability of winning: 0.39
bash-4.2$ java SimCraps 1000
Probability of winning: 0.477
bash-4.2$ java SimCraps 10000
Probability of winning: 0.4991
bash-4.2$ java SimCraps 100000
Probability of winning: 0.49402
bash-4.2$ java SimCraps 1000000
Probability of winning: 0.492637
bash-4.2$ w[Kexcit[K[K[Kit
exit

Script done on Sat 05 Nov 2016 09:15:49 PM PDT
